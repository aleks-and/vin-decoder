{"version":3,"sources":["api.js","components/SearchForm/SearchForm.js","components/SearchForm/tools.js","components/SearchForm/index.js","components/SearchResult/index.js","components/SearchResult/SearchResult.js","components/LastSearchResults/index.js","components/LastSearchResults/LastSearchResults.js","components/Home/index.js","components/Home/Home.js","utils/prepare.HTML.js","components/Variables/Variables.js","components/Variables/index.js","components/NotFound/index.js","components/NotFound/NotFound.js","constants/routes.js","components/Variable/Variable.js","components/Variable/index.js","components/Menu/index.js","components/Menu/Menu.js","components/Header/index.js","components/Header/Header.js","components/ScrollToTop/index.js","components/ScrollToTop/ScrollToTop.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","decodeVin","id","fetch","then","response","ok","Error","statusText","json","getVinVariables","SearchForm","isDecoding","setIsDecoding","setDecodedVinData","decodedVinData","searchInput","setSearchInput","previousVinCode","setPreviousVinCode","setLastSearchResults","useContext","LastSearchResultsContext","onSubmit","event","a","preventDefault","value","isInputFieldValid","test","trim","isValid","data","Results","message","Message","filteredData","filter","Value","isError","isLoaded","code","previousState","slice","className","onChange","target","type","placeholder","maxLength","disabled","SearchResult","length","map","description","name","Variable","VariableId","LastSearchResults","lastSearchResults","index","onClick","currentVinCode","Home","useState","prepareHTML","__html","Variables","isLoading","setIsLoading","setIsError","IsVariablesLoadedContext","isVariablesLoaded","setIsVariablesLoaded","VariablesContext","variables","setVariables","useEffect","fetchData","ID","Name","Description","Fragment","to","dangerouslySetInnerHTML","NotFound","routes","MAIN","VARIABLES","VARIABLE","variable","setVariable","useParams","find","Number","Menu","activeClassName","exact","Header","ScrollToTop","pathname","useLocation","window","scrollTo","React","createContext","App","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee91c26d.chunk.js","sourcesContent":["const BASE_URL = 'https://vpic.nhtsa.dot.gov/api';\n\nexport const decodeVin = id => {\n    return fetch(`${BASE_URL}/vehicles/decodevin/${id}?format=json`)\n        .then( response => {\n            if ( !response.ok ) {\n                throw new Error(response.statusText);\n            }\n\n            return response.json();\n        })\n};\n\nexport const getVinVariables = () => {\n    return fetch(`${BASE_URL}/vehicles/getvehiclevariablelist?format=json`)\n        .then( response => {\n            if ( !response.ok ) {\n                throw new Error(response.statusText);\n            }\n\n            return response.json();\n        })\n};\n\nconst api = {\n    decodeVin,\n    getVinVariables\n};\n\n\nexport default api;\n","import { useContext } from 'react';\n\nimport { decodeVin } from '../../api';\nimport { isInputValid } from './tools';\nimport './SearchForm.scss';\n\nimport { LastSearchResultsContext } from '../../App';\n\n\nconst SearchForm = ({\n    isDecoding,\n    setIsDecoding,\n    setDecodedVinData,\n    decodedVinData,\n    searchInput,\n    setSearchInput,\n    previousVinCode,\n    setPreviousVinCode\n}) => {\n    const {setLastSearchResults} = useContext(LastSearchResultsContext);\n\n    const onSubmit = async event => {\n        event.preventDefault();\n\n        const isInputFieldValid = isInputValid(searchInput.value);\n\n        setSearchInput({\n            ...searchInput,\n            isValid: isInputFieldValid\n        });\n\n        if (\n            !isInputFieldValid\n            || previousVinCode === searchInput.value\n        ) {\n            return;\n        }\n\n        setIsDecoding(true);\n        setPreviousVinCode(searchInput.value);\n\n        try {\n            const {Results: data, Message: message} = await decodeVin(searchInput.value);\n            const filteredData = data.filter(( {Value: description} ) => description !== null);\n\n            setDecodedVinData({\n                isError: false,\n                isLoaded: true,\n                data: filteredData,\n                code: searchInput.value,\n                message\n            });\n\n            setLastSearchResults(previousState => [\n                {data: filteredData, message, code: searchInput.value},\n                ...previousState.slice(0, 4)\n            ]);\n        } catch {\n            setDecodedVinData({\n                ...decodedVinData,\n                isError: true,\n                isLoaded: false,\n            })\n        } finally {\n            setIsDecoding(false);\n        }\n    };\n\n    const onChange = event => {\n        setSearchInput({\n            isValid: true,\n            value: event.target.value\n        })\n    };\n\n    return (\n        <div className=\"search-form\">\n            <h2 className=\"search-form__title\">Search</h2>\n            <form className=\"search-form__form\" onSubmit={event => onSubmit(event)}>\n                <input\n                    value={searchInput.value}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"Enter VIN to decode\"\n                    maxLength=\"17\"\n                    className=\"search-form__input\"\n                />\n                <button\n                    type=\"submit\"\n                    disabled={isDecoding}\n                    className=\"search-form__button\"\n                >\n                    {isDecoding ? 'Decoding...' : 'Decode'}\n                </button>\n            </form>\n            {!searchInput.isValid && (\n                <span className=\"search-form__error\">17 characters (A-Z & 0-9)</span>\n            )}\n        </div>\n    )\n};\n\n\nexport default SearchForm;\n","export const isInputValid = value => /^[A-Z0-9]{17}$/.test(value.trim());\n","import SearchForm from './SearchForm';\n\nexport default SearchForm;\n","import SearchResult from './SearchResult';\n\nexport default SearchResult;\n","import './SearchResult.scss';\n\n\nconst SearchResult = ( {isDecoding, decodedVinData} ) => {\n    const {data, message, isLoaded, isError} = decodedVinData;\n\n    if ( isDecoding ) {\n        return (\n            <div className=\"search-result\">\n                <h2 className=\"search-result__title\">Decoded VIN data</h2>\n                <p>Decoding...</p>\n            </div>\n        );\n    }\n\n    if ( isError ) {\n        return (\n            <div className=\"search-result\">\n                <h2 className=\"search-result__title\">Decoded VIN data</h2>\n                <p>Something went wrong. Please try again later.</p>\n            </div>\n        );\n    }\n\n    if ( !isLoaded ) {\n        return (\n            <div className=\"search-result\">\n                <h2 className=\"search-result__title\">Decoded VIN data</h2>\n            </div>\n        );\n    }\n\n    if ( data.length === 0 ) {\n        return (\n            <div className=\"search-result\">\n                <h2 className=\"search-result__title\">Decoded VIN data</h2>\n                <p>No data for this VIN</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"search-result\">\n            <h2 className=\"search-result__title\">Decoded VIN data</h2>\n            <p>{message}</p>\n            <table className=\"result-table\">\n                <thead>\n                    <tr className=\"result-table__header-row\">\n                        <th className=\"result-table__header-cell\">Variable name</th>\n                        <th className=\"result-table__header-cell\">Variable description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map(({Value: description, Variable: name, VariableId: id}) => (\n                        <tr key={id} className=\"result-table__row\">\n                            <td className=\"result-table__cell\">{name}</td>\n                            <td className=\"result-table__cell\">{description}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\n\nexport default SearchResult;\n","import LastSearchResults from './LastSearchResults';\n\nexport default LastSearchResults;\n","import { useContext } from 'react';\n\nimport './LastSearchResults.scss';\n\nimport { LastSearchResultsContext } from '../../App';\n\n\nconst LastSearchResults = ({\n   setDecodedVinData,\n   decodedVinData,\n   setSearchInput,\n   setPreviousVinCode\n}) => {\n    const {lastSearchResults} = useContext(LastSearchResultsContext);\n\n    const onClick = index => {\n        const currentVinCode = lastSearchResults[index].code;\n\n        if ( decodedVinData.code === currentVinCode ) {\n            return;\n        }\n\n        setDecodedVinData({\n            isError: false,\n            isLoaded: true,\n            ...lastSearchResults[index]\n        });\n\n        setPreviousVinCode(currentVinCode);\n        setSearchInput({\n            value: currentVinCode,\n            isValid: true\n        });\n    };\n\n    if ( lastSearchResults.length === 0 ) {\n        return (\n            <div className=\"last-search\">\n                <h2 className=\"last-search__title\">Last search results</h2>\n                <p>No search performed</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"last-search\">\n            <h2 className=\"last-search__title\">Last search results</h2>\n            <ul className=\"last-search__list\">\n                {lastSearchResults.map(({code}, index) => {\n                    const className = `last-search__list-item${decodedVinData.code === code ? ' last-search__list-item--active' : ''}`;\n\n                    return (\n                        <li\n                            className={className}\n                            key={index}\n                            onClick={() => onClick(index)}\n                        >\n                            {code}\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    );\n};\n\n\nexport default LastSearchResults;\n","import Home from './Home';\n\nexport default Home;\n","import { useState } from 'react';\n\nimport SearchForm from '../SearchForm';\nimport SearchResult from '../SearchResult';\nimport LastSearchResults from '../LastSearchResults';\n\nimport './Home.scss';\n\n\nconst Home = () => {\n    const [isDecoding, setIsDecoding] = useState(false);\n    const [decodedVinData, setDecodedVinData] = useState({\n        data: [],\n        message: null,\n        code: null,\n        isLoaded: false,\n        isError: false\n    });\n\n    const [searchInput, setSearchInput] = useState({\n        value: '',\n        isValid: true\n    });\n\n    const [previousVinCode, setPreviousVinCode] = useState(searchInput.value);\n\n    return (\n        <main className=\"main\">\n            <div className=\"main__inner\">\n                <article className=\"vin-decoder\">\n                    <h1 className=\"vin-decoder__title\">VIN decoder</h1>\n                    <section className=\"vin-decoder__search-form\">\n                        <SearchForm\n                            isDecoding={isDecoding}\n                            setIsDecoding={setIsDecoding}\n                            decodedVinData={decodedVinData}\n                            setDecodedVinData={setDecodedVinData}\n                            searchInput={searchInput}\n                            setSearchInput={setSearchInput}\n                            previousVinCode={previousVinCode}\n                            setPreviousVinCode={setPreviousVinCode}\n                        />\n                    </section>\n                    <aside className=\"vin-decoder__last-search\">\n                        <LastSearchResults\n                            decodedVinData={decodedVinData}\n                            setDecodedVinData={setDecodedVinData}\n                            setSearchInput={setSearchInput}\n                            setPreviousVinCode={setPreviousVinCode}\n                        />\n                    </aside>\n                    <section className=\"vin-decoder__search-result\">\n                        <SearchResult\n                            isDecoding={isDecoding}\n                            decodedVinData={decodedVinData}\n                        />\n                    </section>\n                </article>\n            </div>\n        </main>\n    );\n};\n\n\nexport default Home;\n","const prepareHTML = data => ({__html: data});\n\nexport default prepareHTML;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { getVinVariables } from '../../api';\nimport prepareHTML from '../../utils/prepare.HTML';\nimport './Variables.scss';\n\nimport { IsVariablesLoadedContext, VariablesContext } from '../../App';\n\n\nconst Variables = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const { isVariablesLoaded, setIsVariablesLoaded } = useContext(IsVariablesLoadedContext);\n    const { variables, setVariables } = useContext(VariablesContext);\n\n    useEffect(() => {\n        if (\n            !isVariablesLoaded\n            && !isLoading\n            && !isError\n        ) {\n            async function fetchData () {\n                setIsLoading(true);\n                setIsError(false);\n\n                try {\n                    const {Results: data} = await getVinVariables();\n\n                    setVariables(data);\n                    setIsVariablesLoaded(true);\n                } catch ( {message} ) {\n                    setIsError(true);\n                } finally {\n                    setIsLoading(false);\n                }\n            }\n\n            fetchData();\n        }\n    });\n\n    if ( isLoading ) {\n        return (\n            <main className=\"main\">\n                <div className=\"main__inner\">\n                    <div className=\"variables\">\n                        <h1 className=\"variables__title\">Variable list</h1>\n                        <p>Loading...</p>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n\n    if ( isError ) {\n        return (\n            <main className=\"main\">\n                <div className=\"main__inner\">\n                    <div className=\"variables\">\n                        <h1 className=\"variables__title\">Variable list</h1>\n                        <p>Something went wrong. Please try again later.</p>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n\n    if ( variables.length === 0 ) {\n        return (\n            <main className=\"main\">\n                <div className=\"main__inner\">\n                    <div className=\"variables\">\n                        <h1 className=\"variables__title\">Variable list</h1>\n                        <p>The variable list is empty.</p>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n\n    return (\n        <main className=\"main\">\n            <div className=\"main__inner\">\n                <div className=\"variables\">\n                    <h1 className=\"variables__title\">Variable list</h1>\n                    <dl className=\"variable-list\">\n                        {variables.map(({ID: id, Name: name, Description: description}) => (\n                            <React.Fragment key={id}>\n                                <dt className=\"variable-list__title\">\n                                    <Link className=\"variable-list__title-link\" to={`/variables/${id}`}>\n                                        {name}\n                                    </Link>\n                                </dt>\n                                <dd className=\"variable-list__description\" dangerouslySetInnerHTML={prepareHTML(description)} />\n                            </React.Fragment>\n                        ))}\n                    </dl>\n                </div>\n            </div>\n        </main>\n    );\n};\n\n\nexport default Variables;\n","import Variables from './Variables';\n\nexport default Variables;\n","import NotFound from './NotFound';\n\nexport default NotFound;\n","import './NotFound.scss';\n\n\nconst NotFound = () => (\n    <main className=\"main\">\n        <div className=\"main__inner\">\n            <div className=\"not-found\">\n                <h1 className=\"not-found__title\">404</h1>\n                <p>Page not found</p>\n            </div>\n        </div>\n    </main>\n);\n\n\nexport default NotFound;\n","const routes = {\n    MAIN: '/',\n    VARIABLES: '/variables',\n    VARIABLE: '/variables/:id'\n};\n\n\nexport default routes;\n","import { useEffect, useState, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { getVinVariables } from '../../api';\nimport prepareHTML from '../../utils/prepare.HTML';\nimport routes from '../../constants/routes';\nimport './Variable.scss';\n\nimport { IsVariablesLoadedContext, VariablesContext } from '../../App';\n\n\nconst Variable = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [variable, setVariable] = useState(null);\n\n    const { isVariablesLoaded, setIsVariablesLoaded } = useContext(IsVariablesLoadedContext);\n    const { variables, setVariables } = useContext(VariablesContext);\n\n    const {id} = useParams();\n\n    useEffect(() => {\n        if (\n            !isVariablesLoaded\n            && !isLoading\n            && !isError\n        ) {\n            async function fetchData () {\n                setIsLoading(true);\n                setIsError(false);\n\n                try {\n                    const {Results: data} = await getVinVariables();\n\n                    setVariables(data);\n                    setIsVariablesLoaded(true);\n                } catch {\n                    setIsError(true);\n                } finally {\n                    setIsLoading(false);\n                }\n            }\n\n            fetchData();\n        }\n    });\n\n    useEffect(() => {\n        setVariable(variables.find(variable => variable.ID === Number(id)));\n    }, [variable, variables, id]);\n\n    if ( isLoading ) {\n        return (\n            <main className=\"main\">\n                <div className=\"main__inner\">\n                    <div className=\"variable\">\n                        <h1 className=\"variable__title\">Variable description</h1>\n                        <p>Loading...</p>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n\n    if ( isError ) {\n        return (\n            <main className=\"main\">\n                <div className=\"main__inner\">\n                    <div className=\"variable\">\n                        <h1 className=\"variable__title\">Variable description</h1>\n                        <p>Something went wrong. Please try again later.</p>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n\n    if ( !variable ) {\n        return (\n            <main className=\"main\">\n                <div className=\"main__inner\">\n                    <div className=\"variable\">\n                        <h1 className=\"variable__title\">Variable description</h1>\n                        <p>Variable not found</p>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n\n    return (\n        <main className=\"main\">\n            <div className=\"main__inner\">\n                <div className=\"variable\">\n                    <h1 className=\"variable__title\">Variable description</h1>\n                    <dl className=\"variable-list\">\n                        <dt className=\"variable-list__title\">{variable.Name}</dt>\n                        <dd className=\"variable-list__description\" dangerouslySetInnerHTML={prepareHTML(variable.Description)} />\n                    </dl>\n                    <p>\n                        <Link to={routes.VARIABLES}>Back to list</Link>\n                    </p>\n                </div>\n            </div>\n        </main>\n    );\n};\n\n\nexport default Variable;\n","import Variable from './Variable';\n\nexport default Variable;\n","import Menu from './Menu';\n\nexport default Menu;\n","import { NavLink } from 'react-router-dom';\n\nimport routes from '../../constants/routes';\nimport './Menu.scss';\n\n\nconst Menu = () => (\n    <ul className=\"menu\">\n        <li className=\"menu__item\">\n            <NavLink\n                to={routes.MAIN}\n                className=\"menu__item-link\"\n                activeClassName=\"menu__item-link--active\"\n                exact\n            >\n                Home\n            </NavLink>\n        </li>\n        <li className=\"menu__item\">\n            <NavLink\n                to={routes.VARIABLES}\n                className=\"menu__item-link\"\n                activeClassName=\"menu__item-link--active\"\n            >\n                Variables\n            </NavLink>\n        </li>\n    </ul>\n);\n\n\nexport default Menu;\n","import Header from './Header';\n\nexport default Header;\n","import Menu from '../Menu';\nimport './Header.scss';\n\n\nconst Header = () => (\n    <header className=\"header\">\n        <div className=\"header__inner\">\n            <Menu />\n        </div>\n    </header>\n);\n\n\nexport default Header;\n","import ScrollToTop from './ScrollToTop';\n\nexport default ScrollToTop;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n\nconst ScrollToTop = () => {\n    const {pathname} = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0,0);\n    }, [pathname]);\n\n    return null;\n};\n\n\nexport default ScrollToTop;\n","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Variables from './components/Variables';\nimport NotFound from './components/NotFound';\nimport Variable from './components/Variable';\nimport Header from './components/Header';\nimport ScrollToTop from './components/ScrollToTop';\n\nimport routes from './constants/routes';\n\nexport const IsVariablesLoadedContext = React.createContext(null);\nexport const VariablesContext = React.createContext(null);\nexport const LastSearchResultsContext = React.createContext(null);\n\n\nconst App = () => {\n    const [isVariablesLoaded, setIsVariablesLoaded] = useState(false);\n    const [variables, setVariables] = useState([]);\n    const [lastSearchResults, setLastSearchResults] = useState([]);\n\n    return (\n        <>\n            <ScrollToTop />\n            <LastSearchResultsContext.Provider value={{\n                lastSearchResults,\n                setLastSearchResults\n            }}>\n                <VariablesContext.Provider value={{\n                    variables,\n                    setVariables\n                }}>\n                    <IsVariablesLoadedContext.Provider value={{\n                        isVariablesLoaded,\n                        setIsVariablesLoaded\n                    }}>\n                        <Header />\n                        <Switch>\n                            <Route path={routes.MAIN} exact>\n                                <Home />\n                            </Route>\n                            <Route path={routes.VARIABLES} exact>\n                                <Variables />\n                            </Route>\n                            <Route path={routes.VARIABLE} exact>\n                                <Variable />\n                            </Route>\n                            <Route path='*'>\n                                <NotFound />\n                            </Route>\n                        </Switch>\n                    </IsVariablesLoadedContext.Provider>\n                </VariablesContext.Provider>\n            </LastSearchResultsContext.Provider>\n        </>\n    )\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport './index.scss';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}